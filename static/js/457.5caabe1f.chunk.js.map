{"version":3,"file":"static/js/457.5caabe1f.chunk.js","mappings":"uRAEMA,EAAW,8BACXC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALe,cAEvBC,EAFuB,yBAStBA,EAASC,KAAKC,SATQ,sCAW7BC,QAAQC,MAAR,MAX6B,8DAAH,qDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCa,GAAW,CAChET,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALa,cAErBC,EAFqB,yBASpBA,GAToB,sCAW3BG,QAAQC,MAAR,MAX2B,8DAAH,sDAgBfG,EAAkB,mCAAG,WAAOD,EAASE,GAAhB,gGAEPZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mBACCa,EADD,YACYE,GACjC,CACEX,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAPc,cAExBC,EAFwB,yBAYvBA,GAZuB,sCAc9BG,QAAQC,MAAR,MAd8B,8DAAH,wDAmBlBK,EAAqB,mCAAG,WAAMC,GAAN,gGAEVd,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVY,MAAOD,KANsB,cAE3BV,EAF2B,yBAU1BA,GAV0B,sCAYjCG,QAAQC,MAAR,MAZiC,8DAAH,qD,2GCvDlC,EAA+B,8BAA/B,EAAuE,yBAAvE,EAA0G,yB,SCiD1G,EA7CgB,WACd,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAwDO,EAAAA,EAAAA,UAAS,IAAjE,eAAOC,EAAP,KAA6BC,EAA7B,KACA,GAAkCF,EAAAA,EAAAA,UAAS,MAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAeA,OAZAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAmBD,EAHJ,WAIZa,MAAK,SAAAC,GAAM,OAAIL,EAAwBK,EAAOnB,KAAKC,QAAxC,IACXmB,OAAM,SAAAjB,GACLa,EAAab,GACbD,QAAQmB,IAAIN,EACb,IACAO,SAAQ,WAAQ,GACpB,GAAE,CAACP,EAAWV,IAEfH,QAAQmB,IAAIR,IAGV,yBACGA,EAAqBU,OAAS,EAC7BV,EAAqBW,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,WAA5B,OACvB,iBAAmCC,UAAWC,EAA9C,WACE,eAAGD,UAAWC,EAAd,UAA2B,UACnB,iBAAMD,UAAWC,EAAjB,SAA+BJ,EAAeK,WAEtD,eAAGF,UAAWC,EAAd,UAA2B,UACjB,KACR,kBAAMD,UAAWC,EAAjB,UAA8B,IAAEJ,EAAeM,cAEjD,eAAGH,UAAWC,EAAd,UAA2B,YACjB,kBAAMD,UAAWC,EAAjB,UAA8B,IAAEH,SAE1C,eAAGE,UAAWC,EAAd,UAA2B,eACd,kBAAMD,UAAWC,EAAjB,UAA8B,IAAEF,UAZrCF,EAAeO,SADF,KAkBzB,uBAAG,wBAIV,C","sources":["API.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = 'aa97bd548ce602c0ddc0d918fd61fca9';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMoreInformation = async (movieId, infotype) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}3/movie/${movieId}/${infotype}`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const searchMovieByKeywords = async movieKeyword => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: movieKeyword,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsBlock\":\"Reviews_reviewsBlock__SJ53M\",\"heading\":\"Reviews_heading__vRpa5\",\"content\":\"Reviews_content__13k0w\"};","import { useParams } from 'react-router-dom';\nimport { getMoreInformation } from 'API';\nimport { useState, useEffect } from 'react';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [selectedMovieReviews, setSelectedMovieReviews] = useState([]);\n  const [errorType, setErrorType] = useState(null);\n  const infotype = 'reviews';\n\n  useEffect(() => {\n    getMoreInformation(movieId, infotype)\n      .then(result => setSelectedMovieReviews(result.data.results))\n      .catch(error => {\n        setErrorType(error);\n        console.log(errorType);\n      })\n      .finally(() => {});\n  }, [errorType, movieId]);\n\n  console.log(selectedMovieReviews);\n\n  return (\n    <div>\n      {selectedMovieReviews.length > 0 ? (\n        selectedMovieReviews.map(({ author_details, content, created_at }) => (\n          <div key={author_details.username} className={css.reviewsBlock}>\n            <p className={css.heading}>\n              Name: <span className={css.content}>{author_details.name}</span>\n            </p>\n            <p className={css.heading}>\n              Rating:{' '}\n              <span className={css.content}> {author_details.rating}</span>\n            </p>\n            <p className={css.heading}>\n              Review: <span className={css.content}> {content}</span>\n            </p>\n            <p className={css.heading}>\n              Created at:<span className={css.content}> {created_at}</span>\n            </p>\n          </div>\n        ))\n      ) : (\n        <p>Reviews not found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","language","response","data","results","console","error","getMovieDetails","movieId","getMoreInformation","infotype","searchMovieByKeywords","movieKeyword","query","useParams","useState","selectedMovieReviews","setSelectedMovieReviews","errorType","setErrorType","useEffect","then","result","catch","log","finally","length","map","author_details","content","created_at","className","css","name","rating","username"],"sourceRoot":""}