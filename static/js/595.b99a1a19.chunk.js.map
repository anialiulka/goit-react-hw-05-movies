{"version":3,"file":"static/js/595.b99a1a19.chunk.js","mappings":"uRAEMA,EAAW,8BACXC,EAAU,mCAEHC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAA6C,CAClEI,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALe,cAEvBC,EAFuB,yBAStBA,EAASC,KAAKC,SATQ,sCAW7BC,QAAQC,MAAR,MAX6B,8DAAH,qDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJV,EAAAA,EAAAA,IAAA,UAAaH,EAAb,mBAAgCa,GAAW,CAChET,OAAQ,CACNC,QAASJ,EACTK,SAAU,WALa,cAErBC,EAFqB,yBASpBA,GAToB,sCAW3BG,QAAQC,MAAR,MAX2B,8DAAH,sDAgBfG,EAAkB,mCAAG,WAAOD,EAASE,GAAhB,gGAEPZ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,mBACCa,EADD,YACYE,GACjC,CACEX,OAAQ,CACNC,QAASJ,EACTK,SAAU,WAPc,cAExBC,EAFwB,yBAYvBA,GAZuB,sCAc9BG,QAAQC,MAAR,MAd8B,8DAAH,wDAmBlBK,EAAqB,mCAAG,WAAMC,GAAN,gGAEVd,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAAuC,CAC5DI,OAAQ,CACNC,QAASJ,EACTK,SAAU,QACVY,MAAOD,KANsB,cAE3BV,EAF2B,yBAU1BA,GAV0B,sCAYjCG,QAAQC,MAAR,MAZiC,8DAAH,qD,0GCvDlC,EAA0B,wBAA1B,EAA0D,sB,SCKpDQ,GAAmBC,EAAAA,EAAAA,OAAK,kBAC5B,4BAD4B,IA2D9B,EAvDe,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAoBP,EAAaQ,IAAI,WAE3CC,EAAAA,EAAAA,YAAU,WACM,KAAVP,GAIFR,EAAAA,EAAAA,IAAsBQ,GACnBQ,MAAK,SAAAvB,GACJmB,EAAiBnB,EAAQD,KAAKC,QAC/B,IACAwB,OAAM,SAAAtB,GACLD,QAAQwB,IAAIvB,EACb,IATHiB,EAAiB,GAWpB,GAAE,CAACJ,IAUJ,OACE,4BACE,eAAIW,UAAWC,EAAf,SAA4B,kBAC5B,kBACEC,KAAK,OACLC,MAAOd,EACPe,SAdoB,SAAAC,GACD,KAAnBA,EAAEC,OAAOH,MACXf,EAAgB,CAAC,GAEjBA,EAAgB,CAAEL,MAAOsB,EAAEC,OAAOH,OAErC,EASKH,UAAWC,IAGZT,GAAiBA,EAAce,OAAS,IACvC,wBACGf,EAAcgB,KAAI,SAAAnB,GAAK,OACtB,SAACL,EAAD,CAEEyB,MAAOpB,EAAMoB,MACbC,GAAIrB,EAAMqB,GACVC,cAAejB,GAHVL,EAAMqB,GAFS,QAYjC,C","sources":["API.js","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = 'aa97bd548ce602c0ddc0d918fd61fca9';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/trending/movie/day`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const getMoreInformation = async (movieId, infotype) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}3/movie/${movieId}/${infotype}`,\n      {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n      }\n    );\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n\nexport const searchMovieByKeywords = async movieKeyword => {\n  try {\n    const response = await axios.get(`${BASE_URL}3/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        query: movieKeyword,\n      },\n    });\n\n    return response;\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Movies_heading__Q-AfH\",\"input\":\"Movies_input__N3yRL\"};","import { useSearchParams } from 'react-router-dom';\nimport { searchMovieByKeywords } from 'API';\nimport { useEffect, useState } from 'react';\nimport css from './Movies.module.css';\nimport { lazy } from 'react';\n\nconst MovieGalleryItem = lazy(() =>\n  import('../components/MovieGalleryItem/MovieGalleryItem')\n);\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n  const [searchedMovie, setSearchedMovie] = useState([]);\n  const fromTheSearchPage = searchParams.has('movies');\n\n  useEffect(() => {\n    if (movie === '') {\n      setSearchedMovie([]);\n      return;\n    } else {\n      searchMovieByKeywords(movie)\n        .then(results => {\n          setSearchedMovie(results.data.results);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  }, [movie]);\n\n  const updateQueryString = e => {\n    if (e.target.value === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ query: e.target.value });\n    }\n  };\n\n  return (\n    <div>\n      <h1 className={css.heading}>Movie Search</h1>\n      <input\n        type=\"text\"\n        value={movie}\n        onChange={updateQueryString}\n        className={css.input}\n      />\n\n      {searchedMovie && searchedMovie.length > 0 && (\n        <ul>\n          {searchedMovie.map(movie => (\n            <MovieGalleryItem\n              key={movie.id}\n              title={movie.title}\n              id={movie.id}\n              searchSection={fromTheSearchPage}\n            />\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","getTrendingMovies","axios","params","api_key","language","response","data","results","console","error","getMovieDetails","movieId","getMoreInformation","infotype","searchMovieByKeywords","movieKeyword","query","MovieGalleryItem","lazy","useSearchParams","searchParams","setSearchParams","movie","get","useState","searchedMovie","setSearchedMovie","fromTheSearchPage","has","useEffect","then","catch","log","className","css","type","value","onChange","e","target","length","map","title","id","searchSection"],"sourceRoot":""}